<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>code theory foundation</title>
    <url>/2021/08/02/code-theory-foundation/</url>
    <content><![CDATA[]]></content>
      <tags>
        <tag>Channel coding</tag>
        <tag>Algebraic coding</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/08/01/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>

<h1 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h1><h1 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h1 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h1><figure class="highlight bash"><figcaption><span>something</span></figcaption><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h1 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h1 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Python学习日志</title>
    <url>/2021/08/02/python/</url>
    <content><![CDATA[<p>这是我学习python的历程，你将见证一个拖延症晚期的人最后的自律。</p>
<span id="more"></span>
<p>选用教材：Python编程：从入门到实践（第二版）（美）埃里克·马瑟斯[著] 袁国忠[译] 人民邮电出版社</p>
<h1 id="2021-8-2-初识python-变量"><a href="#2021-8-2-初识python-变量" class="headerlink" title="2021-8-2 初识python 变量"></a>2021-8-2 初识python 变量</h1><h2 id="运行python"><a href="#运行python" class="headerlink" title="运行python"></a>运行python</h2><p>下载python编译器(我的是3.9版本),利用cmd（命令提示符）输入python,出现<code>&gt;&gt;&gt;</code>即可使用或利用对应的软件，我使用了pycharm文本编辑器。<br>两个网址：</p>
<blockquote>
<p><a href="https://www.python.org/">python官网</a>:<a href="https://www.python.org/">https://www.python.org/</a><br><a href="https://www.jetbrains.com/pycharm/">pycharm官网</a>:<a href="https://www.jetbrains.com/pycharm/">https://www.jetbrains.com/pycharm/</a></p>
</blockquote>
<h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><h3 id="关于变量"><a href="#关于变量" class="headerlink" title="关于变量"></a>关于变量</h3><p>变量的命名需要满足以下规则</p>
<blockquote>
<ul>
<li>组成：字母 数字(不能在首位) 下划线 [只有这些！！不要出现别的]</li>
<li>不要用到python关键字和函数名</li>
<li>慎用l(小写)和O(大写) [因为容易和数字1和0傻傻分不清]</li>
</ul>
</blockquote>
<p>变量是可以赋给值的标签。[一个形象的称呼呢]</p>
<h3 id="字符串变量"><a href="#字符串变量" class="headerlink" title="字符串变量"></a>字符串变量</h3><p>字符串的表示，用 “”  ‘’ 均可</p>
<figure class="highlight bash"><figcaption><span>字符串的赋值</span></figcaption><table><tr><td class="code"><pre><span class="line">message = <span class="string">&#x27;somthing &quot;important&quot;&#x27;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>制表符：\t , 换行符：\n</p>
</blockquote>
<p>可以利用方法对字符串进行处理： </p>
<figure class="highlight bash"><figcaption><span>字符串的一些赋值处理</span></figcaption><table><tr><td class="code"><pre><span class="line">message1 = <span class="string">&#x27;aDc&#x27;</span></span><br><span class="line">message2 = <span class="string">&#x27;balance&#x27;</span></span><br><span class="line">message3 = <span class="string">&#x27; jhk &#x27;</span></span><br><span class="line"><span class="built_in">print</span>(message1.title()) <span class="comment">#首字母大写，其余全部小写</span></span><br><span class="line"><span class="built_in">print</span>(message1.upper()) <span class="comment">#全部字母大写</span></span><br><span class="line"><span class="built_in">print</span>(message1.lower()) <span class="comment">#全部字母小写</span></span><br><span class="line"><span class="built_in">print</span>(f<span class="string">&quot;&#123;message1&#125;&#123;message2&#125;&quot;</span>) <span class="comment">#f字符串，将字符串联结</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(f<span class="string">&quot;&#123;message3&#125;&#123;message3&#125;&quot;</span>) <span class="comment">#用于与下面对比</span></span><br><span class="line"><span class="built_in">print</span>(f<span class="string">&quot;&#123;message3.rstrip()&#125;&#123;message3&#125;&quot;</span>)<span class="comment">#删除字符串末尾所有空格（右）</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(message3.lstrip())<span class="comment">#删除字符串开头所有空格（左）</span></span><br><span class="line"><span class="built_in">print</span>(message3.strip()) <span class="comment">#删除字符串开头和末尾的所有空格</span></span><br></pre></td></tr></table></figure>
<p>上述的操作都不会更新变量本身的值，需要利用命令进行，如</p>
<figure class="highlight bash"><figcaption><span>更新字符串</span></figcaption><table><tr><td class="code"><pre><span class="line">message1 = message1.title()</span><br></pre></td></tr></table></figure>
<p>其中有两个概念：</p>
<ul>
<li>f字符串：f(format),可以在字符串中插入变量的值，python将把花括号内的变量替换为其值。</li>
<li>方法：python对数据执行的操作称为方法。</li>
</ul>
<p>f字符串还有其它使用的形式，例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">message = <span class="string">&#x27;acd&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(f<span class="string">&quot;hello,&#123;message&#125;&quot;</span>)</span><br></pre></td></tr></table></figure>

<h3 id="整数与浮点数"><a href="#整数与浮点数" class="headerlink" title="整数与浮点数"></a>整数与浮点数</h3><p>整数可进行基本的数的运算，** 将表示乘方运算</p>
<figure class="highlight bash"><figcaption><span>乘和乘方</span></figcaption><table><tr><td class="code"><pre><span class="line">3 * 3 <span class="comment">#9</span></span><br><span class="line">3 ** 3 <span class="comment">#27</span></span><br></pre></td></tr></table></figure>
<p>Python将所有带小数点的数称为浮点数，这代表着小数点可以出现在数的任何位置上。编程语言需要保证无论小数点出现在什么位置，数的行为是正常的。<br>浮点数同样可以进行基本的数的运算，但是运算结果将有有效小数位数的限制，小数位数过多将导致计算结果不精确。（这是由计算机内部表示数的方式所导致的)<br>整数和浮点数在计算中会产生数据类型的转变，在python中遵循以下原则:</p>
<ul>
<li>除法(/)结果必然是浮点数</li>
<li>所有运算中，只要操作数是浮点数，结果总是浮点数</li>
</ul>
<p>同时，在数中任意位置添加_不会影响它参与后面的使用.这样可以给数字分组，使数清晰易读。</p>
<figure class="highlight bash"><figcaption><span>_的使用</span></figcaption><table><tr><td class="code"><pre><span class="line">age = 10_000_000</span><br></pre></td></tr></table></figure>
<p>_ 的位置是任意的,1000、1_000、10_00、100_0在操作中它们的值都会视为1000。</p>
<h3 id="多变量赋值-常量"><a href="#多变量赋值-常量" class="headerlink" title="多变量赋值 常量"></a>多变量赋值 常量</h3><p>简单的多变量赋值如下：</p>
<figure class="highlight bash"><figcaption><span>多变量赋值</span></figcaption><table><tr><td class="code"><pre><span class="line">x,y,z = 0,1,2 <span class="comment">#将依次赋值,x=0,y=1,z=2</span></span><br></pre></td></tr></table></figure>
<p>关于常量，指在一个程序中永恒不变的量。python没有内置的常量类型，但我们可以将变量名字母全部大写用于标注，将其视为常量，提醒程序员在后续的操作中不得出现改变其值的命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">CONSTANT = 5000</span><br></pre></td></tr></table></figure>
<p>最后</p>
<h2 id="python之禅（好高大上的名字-由Tim-Peters撰写）"><a href="#python之禅（好高大上的名字-由Tim-Peters撰写）" class="headerlink" title="python之禅（好高大上的名字,由Tim Peters撰写）"></a>python之禅（好高大上的名字,由Tim Peters撰写）</h2><p>是在书写优秀python代码时普遍尊重的指导原则，在解释器中运行<code>import this</code>来获得这些原则。<br>列举一些教材中举例的<code>python之禅</code></p>
<blockquote>
<ul>
<li>Beautiful is better than ugly.</li>
</ul>
</blockquote>
<ul>
<li>Simple is better than complex.</li>
<li>Complex is better than complicated.</li>
<li>Readability counts.</li>
<li>There should be one–and preferably only one–obvious way to do it.</li>
<li>Now is better than never</li>
</ul>
<p>总而言之，让你的代码尽量简单，易读(利用<code>#</code>来进行注释吧)。The end.</p>
]]></content>
      <tags>
        <tag>-python -notes</tag>
      </tags>
  </entry>
  <entry>
    <title>something about hexo next</title>
    <url>/2021/08/01/something-about-hexo-next/</url>
    <content><![CDATA[<p>Two useful websites:</p>
<ol>
<li><a href="https://blog.csdn.net/zhuzhuyule/article/details/58347687">Write an article</a></li>
<li><a href="https://blog.csdn.net/nightmare_dimple/article/details/86661502?utm_term=next%E4%B8%BB%E9%A2%98%E4%BB%A3%E7%A0%81%E6%A1%86&utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~all~sobaiduweb~default-3-86661502&spm=3001.4430">The advanced settings of theme “Next”</a> </li>
</ol>
<p>I will use <em><strong>language of Markdown</strong></em>.(maybe I need to learn html grammar (╯▽╰))</p>
<span id="more"></span>

<h1 id="1-about-font"><a href="#1-about-font" class="headerlink" title="1 about font"></a>1 about font</h1><h2 id="1-1-about-title"><a href="#1-1-about-title" class="headerlink" title="1.1 about title"></a>1.1 about title</h2><p>use ‘#’ to create title,and use one more ‘#’ to create subtitles.</p>
<h2 id="1-2-about-special-font"><a href="#1-2-about-special-font" class="headerlink" title="1.2 about special font"></a>1.2 about special font</h2><figure class="highlight bash"><figcaption><span>bold\italic\strikethrough</span></figcaption><table><tr><td class="code"><pre><span class="line">**bash**     //bash font</span><br><span class="line">*italic* %italic font</span><br><span class="line">***bash and italic*** //Both</span><br><span class="line">~~strikethrough~~ //strikethrough</span><br></pre></td></tr></table></figure>
<p>and we can hance:</p>
<blockquote>
<p><strong>bash</strong>,<em>italic</em>,<em><strong>bash and italic</strong></em>,and <del>strikethrough</del></p>
</blockquote>
<h2 id="1-3-about-emphasize"><a href="#1-3-about-emphasize" class="headerlink" title="1.3 about emphasize"></a>1.3 about emphasize</h2><figure class="highlight bash"><figcaption><span>highlight</span></figcaption><table><tr><td class="code"><pre><span class="line">`like this highlight`</span><br></pre></td></tr></table></figure>
<p>The result:</p>
<blockquote>
<p><code>like this highlihgt</code></p>
</blockquote>
<h1 id="2-about-block"><a href="#2-about-block" class="headerlink" title="2 about block"></a>2 about block</h1><h2 id="2-1-codeblock"><a href="#2-1-codeblock" class="headerlink" title="2.1 codeblock"></a>2.1 codeblock</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">``` bash title</span><br><span class="line">like this!</span><br><span class="line">use more &#x27;`&#x27; to have a nestification</span><br><span class="line">```</span><br></pre></td></tr></table></figure>
<h2 id="2-2-quoteblock"><a href="#2-2-quoteblock" class="headerlink" title="2.2 quoteblock"></a>2.2 quoteblock</h2><figure class="highlight bash"><figcaption><span>quoteblock code</span></figcaption><table><tr><td class="code"><pre><span class="line">&gt; you create a quoteblock!   //we just need this <span class="string">&#x27;&gt;&#x27;</span></span><br><span class="line">&gt;&gt; you can also use more <span class="string">&#x27;&gt;&#x27;</span> to create a nestification</span><br><span class="line"></span><br><span class="line">&gt; use 2 <span class="string">&#x27;enter&#x27;</span> to stop the quote</span><br></pre></td></tr></table></figure>
<p>just like this:</p>
<blockquote>
<p>you create a quoteblock!   //we just need thie ‘&gt;’</p>
<blockquote>
<p>you can also use more ‘&gt;’ to create a nestification</p>
</blockquote>
</blockquote>
<blockquote>
<p>use 2 ‘enter’ to stop the quote</p>
</blockquote>
<h2 id="2-3-table"><a href="#2-3-table" class="headerlink" title="2.3 table"></a>2.3 table</h2><figure class="highlight bash"><figcaption><span>table like 3*3</span></figcaption><table><tr><td class="code"><pre><span class="line">| left | center | right |</span><br><span class="line">| :--  | :--:   |  --:  | </span><br><span class="line">| a    |    b   |     c |</span><br></pre></td></tr></table></figure>
<p>just like this:</p>
<table>
<thead>
<tr>
<th align="left">left</th>
<th align="center">center</th>
<th align="right">right</th>
</tr>
</thead>
<tbody><tr>
<td align="left">a</td>
<td align="center">b</td>
<td align="right">c</td>
</tr>
</tbody></table>
<h2 id="2-4-sequence"><a href="#2-4-sequence" class="headerlink" title="2.4 sequence"></a>2.4 sequence</h2><figure class="highlight bash"><figcaption><span>unordered sequence</span></figcaption><table><tr><td class="code"><pre><span class="line">* use<span class="string">&#x27;\*&#x27;</span><span class="string">&#x27;+&#x27;</span><span class="string">&#x27;-&#x27;</span>to create a unordered sequence</span><br><span class="line">  * use some spaces to creat subsequence</span><br><span class="line">* just <span class="keyword">for</span> example</span><br></pre></td></tr></table></figure>
<p>look this:</p>
<blockquote>
<ul>
<li>use”*“+’’-‘to create a unordered sequence<ul>
<li>use some spaces to creat subsequence</li>
</ul>
</li>
<li>just for example</li>
</ul>
</blockquote>
<figure class="highlight bash"><figcaption><span>ordered sequence</span></figcaption><table><tr><td class="code"><pre><span class="line">1. this is a sequence</span><br><span class="line">  1. one space,one <span class="string">&#x27;sub&#x27;</span></span><br><span class="line">1. there isn<span class="string">&#x27;t third subsequence  </span></span><br></pre></td></tr></table></figure>
<p>result:</p>
<blockquote>
<ol>
<li>this is a sequence<ol>
<li>one space,one ‘sub’</li>
</ol>
</li>
<li>there isn’t third subsequence </li>
</ol>
</blockquote>
<h1 id="3-link"><a href="#3-link" class="headerlink" title="3.link"></a>3.link</h1><figure class="highlight bash"><figcaption><span>link</span></figcaption><table><tr><td class="code"><pre><span class="line">A useful website:https://blog.csdn.net/zhuzhuyule/article/details/58347687</span><br><span class="line">or like [website](https://blog.csdn.net/zhuzhuyule/article/details/58347687)</span><br></pre></td></tr></table></figure>
<p>and:<br>A useful website:<a href="https://blog.csdn.net/zhuzhuyule/article/details/58347687">https://blog.csdn.net/zhuzhuyule/article/details/58347687</a><br>or like <a href="https://blog.csdn.net/zhuzhuyule/article/details/58347687">website</a></p>
<h1 id="4-mathtype"><a href="#4-mathtype" class="headerlink" title="4.mathtype"></a>4.mathtype</h1><p>First,add ‘mathjax: true’ on the top,then it’s like latex grammar.<br>like this:</p>
<blockquote>
<p>$$ \frac{1}{p^m_n} $$</p>
</blockquote>
<p>That is all! And don’t forget “space”!<br>And it will keep updating!</p>
]]></content>
      <tags>
        <tag>-hexo -next</tag>
      </tags>
  </entry>
</search>
